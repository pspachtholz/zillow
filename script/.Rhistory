?count
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
properties <- fread('../input/properties_2016.csv', showProgress = FALSE)
transactions <- fread('../input/train_2016.csv', showProgress = FALSE)
sample_submission <- fread('../input/sample_submission.csv')
options(tibble.width = Inf)
tmp <- transactions <- left_join(properties, by="parcelid")
tmp <- transactions %>%  left_join(properties, by="parcelid")
tmp
tmp %>% select(matches('cnt')) %>% head()
tmp %>% select(matches('cnt') & !matches('tax')) %>% head()
vars <- c("bathrromcnt", "bedroomcnt", "fullbathcnt", "roomcnt", "unitcnt")
tmp %>% select(one_of(vars)) %>% head()
tmp %>% select(one_of(c(vars,"logerror")) %>% head()
)
tmp <- tmp %>% select(one_of(c(vars,"logerror")))
cor(tmp)
cor(tmp,na.rm=T)
?cor
cor(tmp, na.rm=T)
tmp<-tmp[,colSums(is.na(x))==0]
tmp<-tmp[,colSums(is.na(tmp))==0]
cor(tmp,use="pairwise.complete.obs")
cor(tmp,use="complete.obs")
cor(tmp[,1:4],tmp[,5])
tmp
tmp <- transactions %>%  left_join(properties, by="parcelid")
tmp <- tmp %>% select(one_of(c(vars,"logerror")))
vars <- c("bathroomcnt", "bedroomcnt", "fullbathcnt", "roomcnt", "unitcnt")
cor(tmp[,1:4],tmp[,5])
cor(tmp[,1:4],tmp[,5], na.rm=TRUE)
cor(tmp[,1:4],tmp[,5], use="complete")
cor(tmp[,1:4],tmp[,5], use="pairwise")
cor(tmp, use="pairwise")
corcorrplot(cor(tmp, use='complete.obs'))
corrplot(cor(tmp, use='complete.obs'))
tmp <- transactions %>%  left_join(properties, by="parcelid")
vars <- c("bathroomcnt", "bedroomcnt", "fullbathcnt", "roomcnt", "unitcnt")
tmp <- tmp %>% select(one_of(c(vars,"logerror")))
corrplot(cor(tmp, use='complete.obs'))
tmp <- transactions %>%  left_join(properties, by="parcelid")
vars <- c("bathroomcnt", "bedroomcnt", "fullbathcnt", "roomcnt", "unitcnt")
tmp <- tmp %>% select(one_of(c(vars,"logerror")))
corrplot(cor(tmp, use='complete.obs'))
tmp <- transactions %>%  left_join(properties, by="parcelid")
vars <- c("finishedfloor1squarefeet", "calculatedfinishedsquarefeet")
tmp <- tmp %>% select(one_of(c(vars,"logerror")))
corrplot(cor(tmp, use='complete.obs'))
tmp <- transactions %>%  left_join(properties, by="parcelid")
vars <- c("calculatedfinishedsquarefeet", "finishedsquarefeet6", "finishedsquarefeet12", "finishedsquarefeet13", "finishedsquarefeet15", "finishedsquarefeet50", "finishedfloor1squarefeet")
tmp <- tmp %>% select(one_of(c(vars,"logerror")))
corrplot(cor(tmp, use='complete.obs'))
tmp <- transactions %>%  left_join(properties, by="parcelid")
vars <- c("calculatedfinishedsquarefeet", "finishedsquarefeet6", "finishedsquarefeet12", "finishedfloor1squarefeet")
tmp <- tmp %>% select(one_of(c(vars,"logerror")))
corrplot(cor(tmp, use='complete.obs'))
tmp <- transactions %>%  left_join(properties, by="parcelid")
vars <- c("calculatedfinishedsquarefeet", "finishedsquarefeet12", "finishedfloor1squarefeet")
tmp <- tmp %>% select(one_of(c(vars,"logerror")))
corrplot(cor(tmp, use='complete.obs'))
range(properties$latitude,na.rm=T)
properties$latitude
range(properties$latitude/1e6,na.rm=T)
range(properties$longitude,na.rm=T)
range(properties$longitude/1e6,na.rm=T)
install.packages("ggmap")
library(ggmap)
?get_map
lat <- range(properties$latitude/1e6,na.rm=T)
long <- range(properties$latitude/1e6,na.rm=T)
gmap <- get_map(location = c(long(1),lat(1),long(2),lat(2)),
maptype = "terrain",
color = "color") # "color" or "bw" (black and white)
lat <- range(properties$latitude/1e6,na.rm=T)
long <- range(properties$latitude/1e6,na.rm=T)
gmap <- get_map(location = c(long(1),lat(1),long(2),lat(2)),
maptype = "terrain",
color = "color") # "color" or "bw" (black and white)
gmap <- get_map(location = c(long[1],lat[1],long[2],lat[2]),
maptype = "terrain",
color = "color") # "color" or "bw" (black and white)
ggmapplot(gmap)
ggmap(gmap)
gmap <- get_map(location = c(long[1],lat[2],long[2],lat[1]),
maptype = "terrain",
color = "color") # "color" or "bw" (black and white)
gmap <- get_map(location = c(long[1],lat[1],long[2],lat[2]),
maptype = "terrain",
color = "color") # "color" or "bw" (black and white)
ggmap(gmap)
gmap <- get_map(location = c(long[1],long[2],lat[1],lat[2]),
maptype = "terrain",
color = "color") # "color" or "bw" (black and white)
ggmap(gmap)
long
lat <- range(properties$latitude/1e6,na.rm=T)
long <- range(properties$longitude/1e6,na.rm=T)
gmap <- get_map(location = c(long[1],lat[1],long[2],lat[2]),
maptype = "terrain",
color = "color") # "color" or "bw" (black and white)
gmap <- get_map(location = c(long[1],lat[1],long[2],lat[2]),
maptype = "terrain",
color = "color") # "color" or "bw" (black and white)
ggmap(gmap)
gmap <- get_map(location = c(long[1],lat[1],long[2],lat[2]),
maptype = "terrain-background",
color = "color") # "color" or "bw" (black and white)
ggmap(gmap)
gmap <- get_map(location = c(long[1],lat[1],long[2],lat[2]),
maptype = "terrain-background",
color = "color") # "color" or "bw" (black and white)
gmap <- get_map(location = c(long[1],lat[1],long[2],lat[2]),
maptype = "terrain",
color = "color") # "color" or "bw" (black and white)
ggmap(gmap)
lat <- range(properties$latitude/1e6,na.rm=T)*1.05
long <- range(properties$longitude/1e6,na.rm=T)*1.05
gmap <- get_map(location = c(long[1],lat[1],long[2],lat[2]),
maptype = "terrain",
color = "color") # "color" or "bw" (black and white)
lat <- range(properties$latitude/1e6,na.rm=T)*1.05
long <- range(properties$longitude/1e6,na.rm=T)*1.05
gmap <- get_map(location = c(long[1],lat[1],long[2],lat[2]),
maptype = "terrain",
color = "color") # "color" or "bw" (black and white)
ggmap(gmap)
lat <- range(properties$latitude/1e6,na.rm=T)*1.01
long <- range(properties$longitude/1e6,na.rm=T)*1.01
gmap <- get_map(location = c(long[1],lat[1],long[2],lat[2]),
maptype = "terrain",
color = "color") # "color" or "bw" (black and white)
ggmap(gmap)
long
lat
lat <- range(properties$latitude/1e6,na.rm=T)*1.005
long <- range(properties$longitude/1e6,na.rm=T)*1.005
gmap <- get_map(location = c(long[1],lat[1],long[2],lat[2]),
maptype = "terrain",
color = "color") # "color" or "bw" (black and white)
gmap <- get_map(location = c(long[1],lat[1],long[2],lat[2]),
maptype = "terrain",
color = "color") # "color" or "bw" (black and white)
ggmap(gmap)
lat <- range(properties$latitude/1e6,na.rm=T)
long <- range(properties$longitude/1e6,na.rm=T)
gmap <- get_map(location = c(long[1],lat[1],long[2],lat[2]),
maptype = "satellite",
color = "color") # "color" or "bw" (black and white)
ggmap(gmap)
lat <- range(properties$latitude/1e6,na.rm=T)
long <- range(properties$longitude/1e6,na.rm=T)
gmap <- get_map(location = c(long[1],lat[1],long[2],lat[2]),
maptype = "roadmap",
color = "color") # "color" or "bw" (black and white)
ggmap(gmap)
properties <- properties %>% rename(
airconditioningtypeid = aircon,
architecturalstyletypeid = architectural_style,
basementsqft = area_basement,
bathroomcnt = num_bathroom,
bedroomcnt = num_bedroom,
buildingqualitytypeid = quality,
buildingclasstypeid = framing,
calculatedbathnbr = num_bathroom_calc,
decktypeid = deck
)
library(dplyr)
properties <- properties %>% rename(
airconditioningtypeid = aircon,
architecturalstyletypeid = architectural_style,
basementsqft = area_basement,
bathroomcnt = num_bathroom,
bedroomcnt = num_bedroom,
buildingqualitytypeid = quality,
buildingclasstypeid = framing,
calculatedbathnbr = num_bathroom_calc,
decktypeid = deck
)
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(ggmap)
properties <- fread('../input/properties_2016.csv', showProgress = FALSE)
transactions <- fread('../input/train_2016.csv', showProgress = FALSE)
sample_submission <- fread('../input/sample_submission.csv')
options(tibble.width = Inf)
datatable(head(properties,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(transactions,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
properties <- properties %>% rename(
airconditioningtypeid = aircon,
architecturalstyletypeid = architectural_style,
basementsqft = area_basement,
bathroomcnt = num_bathroom,
bedroomcnt = num_bedroom,
buildingqualitytypeid = quality,
buildingclasstypeid = framing,
calculatedbathnbr = num_bathroom_calc,
decktypeid = deck,
threequarterbathnbr = num_75_bathroom,
finishedfloor1squarefeet = area_firstfloor_finished,
calculatedfinishedsquarefeet = area_total_calc,
finishedsquarefeet6 = area_base,
finishedsquarefeet12 = area_live_finished,
finishedsquarefeet13 = area_liveperi_finished,
finishedsquarefeet15 = area_total_finished,
finishedsquarefeet50 = area_unknown
)
properties <- properties %>% rename(
aircon = airconditioningtypeid,
architectural_style= architecturalstyletypeid,
area_basement = basementsqft,
num_bathroom = bathroomcnt,
num_bedroom = bedroomcnt,
quality = buildingqualitytypeid,
framing = buildingclasstypeid,
num_bathroom_calc = calculatedbathnbr,
deck = decktypeid,
num_75_bathroom = threequarterbathnbr,
area_firstfloor_finished = finishedfloor1squarefeet,
area_total_calc = calculatedfinishedsquarefeet,
area_base = finishedsquarefeet6,
area_live_finished = finishedsquarefeet12,
area_liveperi_finished = finishedsquarefeet13,
area_total_finished = finishedsquarefeet15,
area_unknown = finishedsquarefeet50
)
properties <- properties %>% rename(
aircon = airconditioningtypeid,
architectural_style= architecturalstyletypeid,
area_basement = basementsqft,
num_bathroom = bathroomcnt,
num_bedroom = bedroomcnt,
quality = buildingqualitytypeid,
framing = buildingclasstypeid,
num_bathroom_calc = calculatedbathnbr,
deck = decktypeid,
num_bath = fullbathcnt,
num_75_bath = threequarterbathnbr,
area_firstfloor_finished = finishedfloor1squarefeet,
area_total_calc = calculatedfinishedsquarefeet,
area_base = finishedsquarefeet6,
area_live_finished = finishedsquarefeet12,
area_liveperi_finished = finishedsquarefeet13,
area_total_finished = finishedsquarefeet15,
area_unknown = finishedsquarefeet50,
num_fireplace = fireplacecnt,
flag_fireplace = fireplaceflag,
num_garage = garagecarcnt,
area_garage = garagetotalsqft,
flag_tub = hashottuborspa,
heating = heatingorsystemtypeid,
area_lot = lotsizesquarefeet,
num_level = numberofstories,
num_pool = poolcnt,
area_pool = poolsizesum,
region_county = regionidcity,
region_city = regionidcity,
region_zip = regionidzip,
region_neighbor = regionidneighborhood,
num_units = unitcnt,
area_patio = yardbuildingsqft17,
area_shed = yardbuildingsqft26,
build_year = yearbuilt
)
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(ggmap)
properties <- fread('../input/properties_2016.csv', showProgress = FALSE)
transactions <- fread('../input/train_2016.csv', showProgress = FALSE)
sample_submission <- fread('../input/sample_submission.csv')
options(tibble.width = Inf)
datatable(head(properties,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(transactions,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(sample_submission,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
properties <- properties %>% rename(
aircon = airconditioningtypeid,
architectural_style= architecturalstyletypeid,
area_basement = basementsqft,
num_bathroom = bathroomcnt,
num_bedroom = bedroomcnt,
quality = buildingqualitytypeid,
framing = buildingclasstypeid,
num_bathroom_calc = calculatedbathnbr,
deck = decktypeid,
num_bath = fullbathcnt,
num_75_bath = threequarterbathnbr,
area_firstfloor_finished = finishedfloor1squarefeet,
area_total_calc = calculatedfinishedsquarefeet,
area_base = finishedsquarefeet6,
area_live_finished = finishedsquarefeet12,
area_liveperi_finished = finishedsquarefeet13,
area_total_finished = finishedsquarefeet15,
area_unknown = finishedsquarefeet50,
num_fireplace = fireplacecnt,
flag_fireplace = fireplaceflag,
num_garage = garagecarcnt,
area_garage = garagetotalsqft,
flag_tub = hashottuborspa,
heating = heatingorsystemtypeid,
area_lot = lotsizesquarefeet,
num_level = numberofstories,
num_pool = poolcnt,
area_pool = poolsizesum,
region_county = regionidcity,
region_city = regionidcity,
region_zip = regionidzip,
region_neighbor = regionidneighborhood,
num_units = unitcnt,
area_patio = yardbuildingsqft17,
area_shed = yardbuildingsqft26,
build_year = yearbuilt
)
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(ggmap)
properties <- fread('../input/properties_2016.csv', showProgress = FALSE)
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(ggmap)
properties <- fread('../input/properties_2016.csv', showProgress = FALSE)
transactions <- fread('../input/train_2016.csv', showProgress = FALSE)
sample_submission <- fread('../input/sample_submission.csv')
options(tibble.width = Inf)
datatable(head(properties,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(transactions,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(sample_submission,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(ggmap)
properties <- fread('../input/properties_2016.csv', showProgress = FALSE)
transactions <- fread('../input/train_2016.csv', showProgress = FALSE)
sample_submission <- fread('../input/sample_submission.csv')
options(tibble.width = Inf)
datatable(head(properties,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(transactions,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(sample_submission,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
properties <- properties %>% rename(
aircon = airconditioningtypeid,
architectural_style= architecturalstyletypeid,
area_basement = basementsqft,
area_patio = yardbuildingsqft17,
area_shed = yardbuildingsqft26,
area_pool = poolsizesum,
area_lot = lotsizesquarefeet,
area_garage = garagetotalsqft,
area_firstfloor_finished = finishedfloor1squarefeet,
area_total_calc = calculatedfinishedsquarefeet,
area_base = finishedsquarefeet6,
area_live_finished = finishedsquarefeet12,
area_liveperi_finished = finishedsquarefeet13,
area_total_finished = finishedsquarefeet15,
area_unknown = finishedsquarefeet50,
num_units = unitcnt,
num_level = numberofstories,
num_room = roomcnt,
num_bathroom = bathroomcnt,
num_bedroom = bedroomcnt,
num_bathroom_calc = calculatedbathnbr,
num_bath = fullbathcnt,
num_75_bath = threequarterbathnbr,
num_fireplace = fireplacecnt,
num_pool = poolcnt,
num_garage = garagecarcnt,
flag_fireplace = fireplaceflag,
flag_tub = hashottuborspa,
quality = buildingqualitytypeid,
framing = buildingclasstypeid,
deck = decktypeid,
heating = heatingorsystemtypeid,
region_county = regionidcity,
region_city = regionidcity,
region_zip = regionidzip,
region_neighbor = regionidneighborhood,
build_year = yearbuilt
)
transactions %>% ggplot(aes(x=logerror)) + geom_histogram(bins=400, fill="red")+theme_bw()+theme(axis.title = element_text(size=16),axis.text = element_text(size=14))+ylab("Count")+coord_cartesian(x=c(-0.5,0.5))
missing_values <- properties %>% summarize_each(funs(sum(is.na(.))/n()))
missing_values <- gather(missing_values, key="feature", value="missing_pct")
missing_values %>% ggplot(aes(x=reorder(feature,-missing_pct),y=missing_pct)) +geom_bar(stat="identity",fill="red")+coord_flip()+theme_bw()
tmp <- transactions %>%  left_join(properties, by="parcelid")
vars <- c("num_bathroom", "num_bedroom", "num_bath", "num_room", "num_unit")
tmp <- tmp %>% select(one_of(c(vars,"logerror")))
corrplot(cor(tmp, use='complete.obs'))
tmp <- transactions %>%  left_join(properties, by="parcelid")
vars <- c("area_total_calc", "area_live_finished", "area_firstfloor_finished")
tmp <- tmp %>% select(one_of(c(vars,"logerror")))
corrplot(cor(tmp, use='complete.obs'))
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(ggmap)
properties <- fread('../input/properties_2016.csv', showProgress = FALSE)
transactions <- fread('../input/train_2016.csv', showProgress = FALSE)
sample_submission <- fread('../input/sample_submission.csv')
options(tibble.width = Inf)
datatable(head(properties,100), style="bootstrap", class="table-condensed")
datatable(head(transactions,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(sample_submission,100), style="bootstrap", class="table-condensed")
properties <- properties %>% rename(
aircon = airconditioningtypeid,
architectural_style= architecturalstyletypeid,
area_basement = basementsqft,
area_patio = yardbuildingsqft17,
area_shed = yardbuildingsqft26,
area_pool = poolsizesum,
area_lot = lotsizesquarefeet,
area_garage = garagetotalsqft,
area_firstfloor_finished = finishedfloor1squarefeet,
area_total_calc = calculatedfinishedsquarefeet,
area_base = finishedsquarefeet6,
area_live_finished = finishedsquarefeet12,
area_liveperi_finished = finishedsquarefeet13,
area_total_finished = finishedsquarefeet15,
area_unknown = finishedsquarefeet50,
num_units = unitcnt,
num_story = numberofstories,
num_room = roomcnt,
num_bathroom = bathroomcnt,
num_bedroom = bedroomcnt,
num_bathroom_calc = calculatedbathnbr,
num_bath = fullbathcnt,
num_75_bath = threequarterbathnbr,
num_fireplace = fireplacecnt,
num_pool = poolcnt,
num_garage = garagecarcnt,
flag_fireplace = fireplaceflag,
flag_tub = hashottuborspa,
quality = buildingqualitytypeid,
framing = buildingclasstypeid,
material = typeconstructiontypeid,
deck = decktypeid,
story = storytypeid,
heating = heatingorsystemtypeid,
region_county = regionidcounty,
region_city = regionidcity,
region_zip = regionidzip,
region_neighbor = regionidneighborhood,
build_year = yearbuilt,
id_parcel = parcelid
)
transactions %>% ggplot(aes(x=logerror)) + geom_histogram(bins=400, fill="red")+theme_bw()+theme(axis.title = element_text(size=16),axis.text = element_text(size=14))+ylab("Count")+coord_cartesian(x=c(-0.5,0.5))
missing_values <- properties %>% summarize_each(funs(sum(is.na(.))/n()))
missing_values <- gather(missing_values, key="feature", value="missing_pct")
missing_values %>% ggplot(aes(x=reorder(feature,-missing_pct),y=missing_pct)) +geom_bar(stat="identity",fill="red")+coord_flip()+theme_bw()
tmp <- transactions %>%  left_join(properties, by="id_parcel")
transactions <- transactions %>% rename(
id_parcel = parcelid
)
unlink('C:/Users/LocalAdmin/Desktop/Eigene Dateien/sonstiges/Kaggle/zillow/script/EDA_Zillow_cache', recursive = TRUE)
setwd("C:/Users/LocalAdmin/Desktop/Eigene Dateien/sonstiges/Kaggle/zillow/script")
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(ggmap)
properties <- fread('../input/properties_2016.csv', showProgress = FALSE)
setwd("C:/Users/LocalAdmin/Desktop/Eigene Dateien/sonstiges/Kaggle/zillow/script")
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(ggmap)
properties <- fread('../input/properties_2016.csv', showProgress = FALSE)
